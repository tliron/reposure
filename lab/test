#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/../scripts/_env"
. "$HERE/_env"
. "$ROOT/scripts/_trap"

PROVIDER=${PROVIDER:-simple}
NAMESPACE=${NAMESPACE:-mynamespace}
REPOSITORY=${REPOSITORY:-catalog}

if [ "$PROVIDER" == openshift ]; then
	REPOSITORY=$NAMESPACE
fi

m "provider: $PROVIDER"

mkdir --parents "$WORKSPACE"

m 'cleaning up...'

kubectl create namespace "$NAMESPACE" || true
kubectl config set-context --current --namespace="$NAMESPACE"

kubectl delete pods hello-world || true
reposure operator uninstall --wait -v
reposure simple uninstall --wait -v
kubectl delete events --all

if [ "$1" == '-b' ]; then
	"$ROOT/scripts/build-container-images"
	"$ROOT/scripts/publish-container-images"
fi

m 'installing operator...'

if [ "$PROVIDER" == minikube ] || [ "$PROVIDER" == openshift ]; then
	reposure operator install --role=view --wait -v
else
	reposure operator install --wait -v
fi

if [ "$PROVIDER" == simple ]; then
	m 'installing simple registry...'

	reposure simple install --wait
fi

#m 'deploying authentication secret...'

#rm --recursive --force "$WORKSPACE/registry-htpasswd"
# Note: Docker registry requires bcrypt
# https://docs.docker.com/registry/configuration/#htpasswd
#htpasswd -cbB "$WORKSPACE/registry-htpasswd" username password
#kubectl create secret generic registry-auth --from-file="$WORKSPACE/registry-htpasswd"

m 'creating registry...'

reposure registry create default --provider="$PROVIDER" --wait -v

m "pushing text file to \"$REPOSITORY/hello\""

echo 'hello world' > "$WORKSPACE/hello.txt"
reposure image push default "$REPOSITORY/hello" "$WORKSPACE/hello.txt" -v

sleep 1

m "pulling text file from \"$REPOSITORY/hello\""

reposure image pull default "$REPOSITORY/hello" --unpack -v

m 'creating container image tarball'

HOST=$(reposure registry info default host)
PUBLIC_IMAGE=docker.io/paulbouwer/hello-kubernetes:1.8
PRIVATE_IMAGE=$HOST/$REPOSITORY/myimage
IMAGE_FILE=$WORKSPACE/myimage.tar

podman rmi "$PRIVATE_IMAGE" || true
podman rmi "$PUBLIC_IMAGE" || true
podman pull "$PUBLIC_IMAGE"
podman tag "$PUBLIC_IMAGE" "$PRIVATE_IMAGE"
rm --force "$IMAGE_FILE"
podman save "$PRIVATE_IMAGE" --output "$IMAGE_FILE"

m "pushing container image tarball to \"$REPOSITORY/myimage\""

reposure image push default "$REPOSITORY/myimage" "$IMAGE_FILE" -v

sleep 3

m "pulling container image tarball from \"$REPOSITORY/myimage\""

reposure image pull default "$REPOSITORY/myimage" > "$WORKSPACE/myimage-pulled.tar" -v

m "creating \"hello-world\" pod"

IMAGE=$PRIVATE_IMAGE envsubst < "$ROOT/assets/kubernetes/hello-world.yaml" | \
kubectl apply -f -

m 'listing images'

# Not permitted on OpenShift
reposure image list default -v
