// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tliron/reposure/resources/reposure.puccini.cloud/v1alpha1"
)

// RegistrySpecApplyConfiguration represents an declarative configuration of the RegistrySpec type for use
// with apply.
type RegistrySpecApplyConfiguration struct {
	Type                        *v1alpha1.RegistryType              `json:"type,omitempty"`
	Direct                      *RegistryDirectApplyConfiguration   `json:"direct,omitempty"`
	Indirect                    *RegistryIndirectApplyConfiguration `json:"indirect,omitempty"`
	AuthenticationSecret        *string                             `json:"authenticationSecret,omitempty"`
	AuthenticationSecretDataKey *string                             `json:"authenticationSecretDataKey,omitempty"`
	AuthorizationSecret         *string                             `json:"authorizationSecret,omitempty"`
}

// RegistrySpecApplyConfiguration constructs an declarative configuration of the RegistrySpec type for use with
// apply.
func RegistrySpec() *RegistrySpecApplyConfiguration {
	return &RegistrySpecApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *RegistrySpecApplyConfiguration) WithType(value v1alpha1.RegistryType) *RegistrySpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithDirect sets the Direct field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Direct field is set to the value of the last call.
func (b *RegistrySpecApplyConfiguration) WithDirect(value *RegistryDirectApplyConfiguration) *RegistrySpecApplyConfiguration {
	b.Direct = value
	return b
}

// WithIndirect sets the Indirect field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Indirect field is set to the value of the last call.
func (b *RegistrySpecApplyConfiguration) WithIndirect(value *RegistryIndirectApplyConfiguration) *RegistrySpecApplyConfiguration {
	b.Indirect = value
	return b
}

// WithAuthenticationSecret sets the AuthenticationSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthenticationSecret field is set to the value of the last call.
func (b *RegistrySpecApplyConfiguration) WithAuthenticationSecret(value string) *RegistrySpecApplyConfiguration {
	b.AuthenticationSecret = &value
	return b
}

// WithAuthenticationSecretDataKey sets the AuthenticationSecretDataKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthenticationSecretDataKey field is set to the value of the last call.
func (b *RegistrySpecApplyConfiguration) WithAuthenticationSecretDataKey(value string) *RegistrySpecApplyConfiguration {
	b.AuthenticationSecretDataKey = &value
	return b
}

// WithAuthorizationSecret sets the AuthorizationSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthorizationSecret field is set to the value of the last call.
func (b *RegistrySpecApplyConfiguration) WithAuthorizationSecret(value string) *RegistrySpecApplyConfiguration {
	b.AuthorizationSecret = &value
	return b
}
